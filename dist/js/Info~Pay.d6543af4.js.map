{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VDataTable/VSimpleTable.ts","webpack:///../../../src/components/VTooltip/VTooltip.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","dense","fixedHeader","height","Number","String","$slots","themeClasses","genWrapper","wrapper","$createElement","staticClass","style","render","h","class","closeDelay","type","default","fixed","openDelay","openOnHover","tag","transition","data","calculatedMinWidth","closeDependents","calculatedLeft","content","unknown","activatorLeft","attach","activator","left","top","right","parseInt","calcXOverflow","dimensions","calculatedTop","activatorTop","bottom","calcYOverflow","computedTransition","isActive","offsetY","offsetX","styles","maxWidth","minWidth","opacity","zIndex","activeZIndex","beforeMount","mounted","activate","requestAnimationFrame","deactivate","genActivatorListeners","listeners","e","genActivatorAttributes","genTransition","genContent","setBackgroundColor","activatorFixed","attrs","directives","isContentActive","ref","showLazyContent","baseMixins","parentIsActive","expansionPanel","watch","immediate","handler","isBooted","oldVal","$nextTick","beforeDestroy","ripple","disableIconRotate","expandIcon","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","tabindex","on","click","mousedown","mouseup","open","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","toggle"],"mappings":"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","file":"js/Info~Pay.d6543af4.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        'v-data-table--has-top': !!this.$slots.top,\n        'v-data-table--has-bottom': !!this.$slots.bottom,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","import './VTooltip.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Helpers\nimport { convertToUnit, keyCodes, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable, Delayable, Dependent, Menuable, Toggleable).extend({\n  name: 'v-tooltip',\n\n  props: {\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    disabled: Boolean,\n    fixed: {\n      type: Boolean,\n      default: true,\n    },\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true,\n    },\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    transition: String,\n  },\n\n  data: () => ({\n    calculatedMinWidth: 0,\n    closeDependents: false,\n  }),\n\n  computed: {\n    calculatedLeft (): string {\n      const { activator, content } = this.dimensions\n      const unknown = !this.bottom && !this.left && !this.top && !this.right\n      const activatorLeft = this.attach !== false ? activator.offsetLeft : activator.left\n      let left = 0\n\n      if (this.top || this.bottom || unknown) {\n        left = (\n          activatorLeft +\n          (activator.width / 2) -\n          (content.width / 2)\n        )\n      } else if (this.left || this.right) {\n        left = (\n          activatorLeft +\n          (this.right ? activator.width : -content.width) +\n          (this.right ? 10 : -10)\n        )\n      }\n\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return `${this.calcXOverflow(left, this.dimensions.content.width)}px`\n    },\n    calculatedTop (): string {\n      const { activator, content } = this.dimensions\n      const activatorTop = this.attach !== false ? activator.offsetTop : activator.top\n      let top = 0\n\n      if (this.top || this.bottom) {\n        top = (\n          activatorTop +\n          (this.bottom ? activator.height : -content.height) +\n          (this.bottom ? 10 : -10)\n        )\n      } else if (this.left || this.right) {\n        top = (\n          activatorTop +\n          (activator.height / 2) -\n          (content.height / 2)\n        )\n      }\n\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return `${this.calcYOverflow(top + this.pageYOffset)}px`\n    },\n    classes (): object {\n      return {\n        'v-tooltip--top': this.top,\n        'v-tooltip--right': this.right,\n        'v-tooltip--bottom': this.bottom,\n        'v-tooltip--left': this.left,\n        'v-tooltip--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      }\n    },\n    computedTransition (): string {\n      if (this.transition) return this.transition\n\n      return this.isActive ? 'scale-transition' : 'fade-transition'\n    },\n    offsetY (): boolean {\n      return this.top || this.bottom\n    },\n    offsetX (): boolean {\n      return this.left || this.right\n    },\n    styles (): object {\n      return {\n        left: this.calculatedLeft,\n        maxWidth: convertToUnit(this.maxWidth),\n        minWidth: convertToUnit(this.minWidth),\n        opacity: this.isActive ? 0.9 : 0,\n        top: this.calculatedTop,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.value && this.callActivate()\n    })\n  },\n\n  mounted () {\n    if (getSlotType(this, 'activator', true) === 'v-slot') {\n      consoleError(`v-tooltip's activator slot must be bound, try '<template #activator=\"data\"><v-btn v-on=\"data.on>'`, this)\n    }\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n    },\n    deactivate () {\n      this.runDelay('close')\n    },\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      listeners.focus = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('open')\n      }\n      listeners.blur = (e: Event) => {\n        this.getActivator(e)\n        this.runDelay('close')\n      }\n      listeners.keydown = (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.esc) {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      }\n\n      return listeners\n    },\n    genActivatorAttributes () {\n      return {\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genTransition () {\n      const content = this.genContent()\n\n      if (!this.computedTransition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.computedTransition,\n        },\n      }, [content])\n    },\n    genContent () {\n      return this.$createElement(\n        'div',\n        this.setBackgroundColor(this.color, {\n          staticClass: 'v-tooltip__content',\n          class: {\n            [this.contentClass]: true,\n            menuable__content__active: this.isActive,\n            'v-tooltip__content--fixed': this.activatorFixed,\n          },\n          style: this.styles,\n          attrs: this.getScopeIdAttrs(),\n          directives: [{\n            name: 'show',\n            value: this.isContentActive,\n          }],\n          ref: 'content',\n        }),\n        this.getContentSlot()\n      )\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-tooltip',\n      class: this.classes,\n    }, [\n      this.showLazyContent(() => [this.genTransition()]),\n      this.genActivator(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}